CREATE TABLE IF NOT EXISTS users(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email       VARCHAR(64) NOT NULL,
    login       VARCHAR(16) NOT NULL,
    name        VARCHAR(64),
    birthday    DATE
);

CREATE TABLE IF NOT EXISTS mpa(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(5) UNIQUE
);

CREATE TABLE IF NOT EXISTS genres(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(32) UNIQUE
);

CREATE TABLE IF NOT EXISTS films(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(64) NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INTEGER,
    mpa_id       INTEGER,
--    mpa          ENUM('G', 'PG', 'PG_13', 'R', 'NC_17'),
    FOREIGN KEY (mpa_id) REFERENCES mpa (id),
    CONSTRAINT films_check_name_not_blank CHECK (name <> ''),
    CONSTRAINT films_check_positive_duration CHECK (duration > 0),
    CONSTRAINT films_check_date_before CHECK (release_date > '1895-12-28')
);

CREATE TABLE IF NOT EXISTS user_user(
    user_id     BIGINT,
    friend_id   BIGINT,
    --accepted    BOOLEAN DEFAULT false,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (friend_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS film_genre(
  film_id BIGINT,
  genre_id INTEGER,
  PRIMARY KEY (film_id, genre_id),
  FOREIGN KEY (film_id) REFERENCES films(id),
  FOREIGN KEY (genre_id) REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS film_likes(
    film_id BIGINT,
    user_id BIGINT,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES films(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);